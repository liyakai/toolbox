/*
 * obj/x86_64-unknown-linux-gnu/xrl/interfaces/fea_ifmgr_replicator_xif.cc
 * vim:set sts=4 ts=8 ft=cpp:
 *
 * Copyright (c) 2001-2011 XORP, Inc and Others
 * See the XORP LICENSE.lgpl file for licensing, conditions, and warranties
 * on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by 'clnt-gen'.
 */

#include "fea_ifmgr_replicator_xif.hh"

bool
XrlIfmgrReplicatorV0p1Client::send_register_ifmgr_mirror(
	const char*	dst_xrl_target_name,
	const string&	clientname,
	const RegisterIfmgrMirrorCB&	cb
)
{
    Xrl* x = ap_xrl_register_ifmgr_mirror.get();

    if (!x) {
        x = new Xrl(dst_xrl_target_name, "ifmgr_replicator/0.1/register_ifmgr_mirror");
        x->args().add("clientname", clientname);
        ap_xrl_register_ifmgr_mirror.reset(x);
    }

    x->set_target(dst_xrl_target_name);

    x->args().set_arg(0, clientname);

    return _sender->send(*x, callback(&XrlIfmgrReplicatorV0p1Client::unmarshall_register_ifmgr_mirror, cb));
}


/* Unmarshall register_ifmgr_mirror */
void
XrlIfmgrReplicatorV0p1Client::unmarshall_register_ifmgr_mirror(
	const XrlError&	e,
	XrlArgs*	a,
	RegisterIfmgrMirrorCB		cb
)
{
    if (e != XrlError::OKAY()) {
	cb->dispatch(e);
	return;
    } else if (a && a->size() != 0) {
	XLOG_ERROR("Wrong number of arguments (%u != %u)", XORP_UINT_CAST(a->size()), XORP_UINT_CAST(0));
	cb->dispatch(XrlError::BAD_ARGS());
	return;
    }
    cb->dispatch(e);
}

bool
XrlIfmgrReplicatorV0p1Client::send_unregister_ifmgr_mirror(
	const char*	dst_xrl_target_name,
	const string&	clientname,
	const UnregisterIfmgrMirrorCB&	cb
)
{
    Xrl* x = ap_xrl_unregister_ifmgr_mirror.get();

    if (!x) {
        x = new Xrl(dst_xrl_target_name, "ifmgr_replicator/0.1/unregister_ifmgr_mirror");
        x->args().add("clientname", clientname);
        ap_xrl_unregister_ifmgr_mirror.reset(x);
    }

    x->set_target(dst_xrl_target_name);

    x->args().set_arg(0, clientname);

    return _sender->send(*x, callback(&XrlIfmgrReplicatorV0p1Client::unmarshall_unregister_ifmgr_mirror, cb));
}


/* Unmarshall unregister_ifmgr_mirror */
void
XrlIfmgrReplicatorV0p1Client::unmarshall_unregister_ifmgr_mirror(
	const XrlError&	e,
	XrlArgs*	a,
	UnregisterIfmgrMirrorCB		cb
)
{
    if (e != XrlError::OKAY()) {
	cb->dispatch(e);
	return;
    } else if (a && a->size() != 0) {
	XLOG_ERROR("Wrong number of arguments (%u != %u)", XORP_UINT_CAST(a->size()), XORP_UINT_CAST(0));
	cb->dispatch(XrlError::BAD_ARGS());
	return;
    }
    cb->dispatch(e);
}
