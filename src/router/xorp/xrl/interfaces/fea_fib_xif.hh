/*
 * obj/x86_64-unknown-linux-gnu/xrl/interfaces/fea_fib_xif.hh
 * vim:set sts=4 ts=8 ft=cpp:
 *
 * Copyright (c) 2001-2011 XORP, Inc and Others
 * See the XORP LICENSE.lgpl file for licensing, conditions, and warranties
 * on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by 'clnt-gen'.
 */

#ifndef __XRL_INTERFACES_FEA_FIB_XIF_HH__
#define __XRL_INTERFACES_FEA_FIB_XIF_HH__

#undef XORP_LIBRARY_NAME
#define XORP_LIBRARY_NAME "XifFeaFib"

#include "libxorp/xlog.h"
#include "libxorp/callback.hh"

#include "libxipc/xrl.hh"
#include "libxipc/xrl_error.hh"
#include "libxipc/xrl_sender.hh"

//#include <memory>

class XrlFeaFibV0p1Client {
public:
    XrlFeaFibV0p1Client(XrlSender* s) : _sender(s) {}
    virtual ~XrlFeaFibV0p1Client() {}

    typedef XorpCallback1<void, const XrlError&>::RefPtr AddFibClient4CB;
    /**
     *  Send Xrl intended to:
     *
     *  Add a FIB client.
     *
     *  @param dst_xrl_target_name the Xrl target name of the destination.
     *
     *  @param client_target_name the target name of the FIB client to add.
     *
     *  @param send_updates whether updates should be sent.
     *
     *  @param send_resolves whether resolution requests should be sent.
     */
    bool send_add_fib_client4(
	const char*	dst_xrl_target_name,
	const string&	client_target_name,
	const bool&	send_updates,
	const bool&	send_resolves,
	const AddFibClient4CB&	cb
    );

    typedef XorpCallback1<void, const XrlError&>::RefPtr DeleteFibClient4CB;
    /**
     *  Send Xrl intended to:
     *
     *  Delete a FIB client.
     *
     *  @param dst_xrl_target_name the Xrl target name of the destination.
     *
     *  @param client_target_name the target name of the FIB client to delete.
     */
    bool send_delete_fib_client4(
	const char*	dst_xrl_target_name,
	const string&	client_target_name,
	const DeleteFibClient4CB&	cb
    );

    typedef XorpCallback1<void, const XrlError&>::RefPtr AddFibClient6CB;

    bool send_add_fib_client6(
	const char*	dst_xrl_target_name,
	const string&	client_target_name,
	const bool&	send_updates,
	const bool&	send_resolves,
	const AddFibClient6CB&	cb
    );

    typedef XorpCallback1<void, const XrlError&>::RefPtr DeleteFibClient6CB;

    bool send_delete_fib_client6(
	const char*	dst_xrl_target_name,
	const string&	client_target_name,
	const DeleteFibClient6CB&	cb
    );

protected:
    XrlSender* _sender;

private:
    static void unmarshall_add_fib_client4(
	const XrlError&	e,
	XrlArgs*	a,
	AddFibClient4CB		cb
    );

    static void unmarshall_delete_fib_client4(
	const XrlError&	e,
	XrlArgs*	a,
	DeleteFibClient4CB		cb
    );

    static void unmarshall_add_fib_client6(
	const XrlError&	e,
	XrlArgs*	a,
	AddFibClient6CB		cb
    );

    static void unmarshall_delete_fib_client6(
	const XrlError&	e,
	XrlArgs*	a,
	DeleteFibClient6CB		cb
    );

private:
    /* Declare cached Xrl pointers */
    unique_ptr<Xrl> ap_xrl_add_fib_client4;
    unique_ptr<Xrl> ap_xrl_delete_fib_client4;
    unique_ptr<Xrl> ap_xrl_add_fib_client6;
    unique_ptr<Xrl> ap_xrl_delete_fib_client6;
};

#endif /* __XRL_INTERFACES_FEA_FIB_XIF_HH__ */
