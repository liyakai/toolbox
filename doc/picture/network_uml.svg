<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3373px" height="1903px" viewBox="-0.5 -0.5 3373 1903"><defs><clipPath id="mx-clip-1600-527-492-54-0"><rect x="1600" y="527" width="492" height="54"/></clipPath><clipPath id="mx-clip-1600-589-492-312-0"><rect x="1600" y="589" width="492" height="312"/></clipPath><clipPath id="mx-clip-1664-347-402-26-0"><rect x="1664" y="347" width="402" height="26"/></clipPath><clipPath id="mx-clip-1664-381-402-50-0"><rect x="1664" y="381" width="402" height="50"/></clipPath><clipPath id="mx-clip-1585-1007-502-54-0"><rect x="1585" y="1007" width="502" height="54"/></clipPath><clipPath id="mx-clip-1585-1069-502-142-0"><rect x="1585" y="1069" width="502" height="142"/></clipPath><clipPath id="mx-clip-1820-1406-272-26-0"><rect x="1820" y="1406" width="272" height="26"/></clipPath><clipPath id="mx-clip-1670-1337-272-26-0"><rect x="1670" y="1337" width="272" height="26"/></clipPath><clipPath id="mx-clip-2920-1217-372-104-0"><rect x="2920" y="1217" width="372" height="104"/></clipPath><clipPath id="mx-clip-2920-1329-372-422-0"><rect x="2920" y="1329" width="372" height="422"/></clipPath><clipPath id="mx-clip-2670-467-282-94-0"><rect x="2670" y="467" width="282" height="94"/></clipPath><clipPath id="mx-clip-2670-569-282-392-0"><rect x="2670" y="569" width="282" height="392"/></clipPath><clipPath id="mx-clip-1840-1496-392-44-0"><rect x="1840" y="1496" width="392" height="44"/></clipPath><clipPath id="mx-clip-2390-1097-392-124-0"><rect x="2390" y="1097" width="392" height="124"/></clipPath><clipPath id="mx-clip-2390-1229-392-282-0"><rect x="2390" y="1229" width="392" height="282"/></clipPath><clipPath id="mx-clip-1140-77-152-26-0"><rect x="1140" y="77" width="152" height="26"/></clipPath><clipPath id="mx-clip-1140-111-152-50-0"><rect x="1140" y="111" width="152" height="50"/></clipPath><clipPath id="mx-clip-1230-247-212-26-0"><rect x="1230" y="247" width="212" height="26"/></clipPath><clipPath id="mx-clip-1230-281-212-210-0"><rect x="1230" y="281" width="212" height="210"/></clipPath><clipPath id="mx-clip-980-237-152-26-0"><rect x="980" y="237" width="152" height="26"/></clipPath><clipPath id="mx-clip-980-271-152-40-0"><rect x="980" y="271" width="152" height="40"/></clipPath><clipPath id="mx-clip-470-1547-362-54-0"><rect x="470" y="1547" width="362" height="54"/></clipPath><clipPath id="mx-clip-470-1609-362-82-0"><rect x="470" y="1609" width="362" height="82"/></clipPath><clipPath id="mx-clip-810-1357-362-34-0"><rect x="810" y="1357" width="362" height="34"/></clipPath><clipPath id="mx-clip-810-1399-362-112-0"><rect x="810" y="1399" width="362" height="112"/></clipPath><clipPath id="mx-clip-1040-1157-362-54-0"><rect x="1040" y="1157" width="362" height="54"/></clipPath><clipPath id="mx-clip-1040-1219-362-102-0"><rect x="1040" y="1219" width="362" height="102"/></clipPath><clipPath id="mx-clip-20-541-402-64-0"><rect x="20" y="541" width="402" height="64"/></clipPath><clipPath id="mx-clip-20-613-402-262-0"><rect x="20" y="613" width="402" height="262"/></clipPath><clipPath id="mx-clip-964-1557-362-64-0"><rect x="964" y="1557" width="362" height="64"/></clipPath><clipPath id="mx-clip-964-1629-362-82-0"><rect x="964" y="1629" width="362" height="82"/></clipPath><clipPath id="mx-clip-1550-1667-352-34-0"><rect x="1550" y="1667" width="352" height="34"/></clipPath><clipPath id="mx-clip-1550-1709-352-172-0"><rect x="1550" y="1709" width="352" height="172"/></clipPath><clipPath id="mx-clip-1860-1587-392-24-0"><rect x="1860" y="1587" width="392" height="24"/></clipPath></defs><g><path d="M 1536 126 L 1746 126 L 1746 201 L 1736 216 L 1536 216 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="all"/><path d="M 1746 126 L 2266 126 L 2266 1886 L 1536 1886 L 1536 216" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 171px; margin-left: 1537px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 48px;">Network</font></div></div></div></foreignObject></g><path d="M 2306 331 L 2596 331 L 2596 511 L 2586 526 L 2306 526 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="all"/><path d="M 2596 331 L 3356 331 L 3356 1776 L 2306 1776 L 2306 526" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 288px; height: 1px; padding-top: 429px; margin-left: 2307px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 48px;">Socket</font></div></div></div></foreignObject></g><path d="M 456 996 L 766 996 L 766 1081 L 756 1096 L 456 1096 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="all"/><path d="M 766 996 L 1456 996 L 1456 1716 L 456 1716 L 456 1096" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 308px; height: 1px; padding-top: 1046px; margin-left: 457px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 48px;">I/OÂ multiplex</font></div></div></div></foreignObject></g><path d="M 1846 496 L 1844.89 444.01" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1844.52 427.02 L 1853.39 443.83 L 1836.39 444.2 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 461px; margin-left: 1845px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 441.99 739 L 1001 739 Q 1011 739 1011 739.5 L 1011 739.75 Q 1011 740 1021 740 L 1593.76 740" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 426.99 739 L 434.49 734.59 L 441.99 739 L 434.49 743.41 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 1581.88 746.5 L 1594.88 740 L 1581.88 733.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 733px; margin-left: 428px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">1</div></div></div></foreignObject></g><path d="M 1836 976 L 1836 914.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1836 897.12 L 1844.5 914.12 L 1827.5 914.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 936px; margin-left: 1836px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 1726 1636 L 1831.1 1223.56" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1835.29 1207.08 L 1839.33 1225.66 L 1822.86 1221.46 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1421px; margin-left: 1781px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 1836 1296 L 1836 1224.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1836 1207.12 L 1844.5 1224.12 L 1827.5 1224.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1251px; margin-left: 1836px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 1956 1375 L 1846.49 1220.77" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1836.65 1206.91 L 1853.42 1215.85 L 1839.56 1225.69 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1290px; margin-left: 1896px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 2036 1465 L 1847.07 1220.34" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1836.68 1206.88 L 1853.8 1215.15 L 1840.35 1225.54 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1335px; margin-left: 1936px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 1596 522 L 1596 496 L 2096 496 L 2096 522" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 1596 522 L 1596 896 L 2096 896 L 2096 522" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1596 522 L 2096 522" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" font-style="italic" text-anchor="middle" font-size="12px"><text x="1845.5" y="513.5">INetwork</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1600-527-492-54-0)" font-size="12px"><text x="1601.5" y="539.5">- network_type_:Â NetworkType</text><text x="1601.5" y="553.5">-Â event2worker_:Event2Worker</text><text x="1601.5" y="567.5">-Â master_:NetworkChannel</text></g><path d="M 1596 580 L 2096 580" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-style="italic" clip-path="url(#mx-clip-1600-589-492-312-0)" font-size="12px"><text x="1601.5" y="601.5">+ Init(NetworkChannel*, NetworkType):void virtual</text><text x="1601.5" y="615.5">+ UnInit():void virtual</text><text x="1601.5" y="629.5">+ Update():void virtual</text><text x="1601.5" y="643.5">+ CloseListenInMultiplexing(int32_t socket_id):void virtual</text><text x="1601.5" y="657.5">+ PushEvent(NetEventWorker*):void</text><text x="1601.5" y="671.5"># OnNewAccepter(const std::string&amp;, const uint16_t, int32_t, int32_t):uint64_t virtual = 0</text><text x="1601.5" y="685.5"># OnNewConnecter(const std::string&amp;, const uint16_t, int32_t, int32_t):uint64_t virtual = 0</text><text x="1601.5" y="699.5"># OnClose(uint64_t):void virtual = 0</text><text x="1601.5" y="713.5"># OnSendOnSend(uint64_t, const char*, std::size_t):void virtual = 0</text><text x="1601.5" y="727.5">+ OnAccepted(uint64_t):void</text><text x="1601.5" y="741.5">+ OnConnected(uint64_t):void</text><text x="1601.5" y="755.5">+ OnConnectedFailed(ENetErrCode, int32_t):void</text><text x="1601.5" y="769.5">+ OnErrored(uint64_t, ENetErrCode, int32_t):void</text><text x="1601.5" y="783.5">+ OnClosed(uint64_t, ENetErrCode, int32_t):void</text><text x="1601.5" y="797.5">+ OnReceived(uint64_t, const char*, uint32_t):void</text><text x="1601.5" y="811.5">- OnMainToWorkerNewAccepter_(Event*):void</text><text x="1601.5" y="825.5">- OnMainToWorkerNewConnecter_(Event*):void</text><text x="1601.5" y="839.5">- OnMainToWorkerClose_(Event*):void</text><text x="1601.5" y="853.5">- OnMainToWorkerSend_(Event*):void</text><text x="1601.5" y="867.5">- HandleEvents_():void</text><text x="1601.5" y="881.5">+Â GetNetworkType():NetworkTypeÂ </text></g><path d="M 1660 342 L 1660 316 L 2070 316 L 2070 342" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1660 342 L 1660 426 L 2070 426 L 2070 342" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1660 342 L 2070 342" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1864.5" y="333.5">EventBasedObject</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1664-347-402-26-0)" font-size="12px"><text x="1665.5" y="359.5">-Â event_func_map_:Â EventFuncMap</text></g><path d="M 1660 372 L 2070 372" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1664-381-402-50-0)" font-size="12px"><text x="1665.5" y="393.5">+Â HandleEvent(Event*):void</text><text x="1665.5" y="407.5">+Â RegistereventHandler(EventID, EventHandle):void</text><text x="1665.5" y="421.5">+Â UnregisterEventHandler(EventID):void</text></g><path d="M 1581 1002 L 1581 976 L 2091 976 L 2091 1002" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1581 1002 L 1581 1206 L 2091 1206 L 2091 1002" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1581 1002 L 2091 1002" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1835.5" y="993.5">ImpNetwork</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1585-1007-502-54-0)" font-size="12px"><text x="1586.5" y="1019.5"># sock_mgr_:SocketPool&lt;SocketType&gt;</text><text x="1586.5" y="1033.5"># base_ctrl_:IOMultiplexingInterface*</text></g><path d="M 1581 1060 L 2091 1060" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1585-1069-502-142-0)" font-size="12px"><text x="1586.5" y="1081.5">+ Init(NetworkChannel* master, NetworkType network_type):void override</text><text x="1586.5" y="1095.5">+ UnInit():void override</text><text x="1586.5" y="1109.5">+ Update():void override</text><text x="1586.5" y="1123.5">+ GetBaseCtrl():IOMultiplexingInterface*</text><text x="1586.5" y="1137.5">+ CloseListenInMultiplexing(int32_t socket_id):void override</text><text x="1586.5" y="1151.5"># OnNewAccepter(const std::string&amp;, const uint16_t, int32_t, int32_t):uint64_t override</text><text x="1586.5" y="1165.5"># OnNewConnecter(const std::string&amp;, const uint16_t, int32_t, int32_t):uint64_t override</text><text x="1586.5" y="1179.5"># OnClose(uint64_t):void override</text><text x="1586.5" y="1193.5"># OnSend(uint64_t, const char*, std::size_t):void override</text></g><path d="M 1816 1401 L 1816 1375 L 2096 1375 L 2096 1401" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1816 1401 L 1816 1427 L 2096 1427 L 2096 1401" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1816 1401 L 2096 1401" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1955.5" y="1392.5">TcpIocpNetwork</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1820-1406-272-26-0)" font-size="12px"><text x="1821.5" y="1418.5">+ Init(NetworkChannel*, NetworkType):void override</text></g><path d="M 1666 1332 L 1666 1306 L 1946 1306 L 1946 1332" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1666 1332 L 1666 1358 L 1946 1358 L 1946 1332" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1666 1332 L 1946 1332" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1805.5" y="1323.5">TcpEpollNetwork</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1670-1337-272-26-0)" font-size="12px"><text x="1671.5" y="1349.5">+ Init(NetworkChannel*, NetworkType):void override</text></g><path d="M 1056 206 L 1199.49 161.65" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1215.73 156.63 L 1202 169.77 L 1196.98 153.53 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 181px; margin-left: 1136px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 221 510 L 979.29 306.58" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 969.49 315.94 L 980.37 306.29 L 966.13 303.38" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1596 549 L 1328.28 486.51" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1341.33 482.88 L 1327.19 486.25 L 1338.37 495.54" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2586 1066 L 2789.57 964.48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2804.78 956.89 L 2793.36 972.08 L 2785.77 956.87 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1011px; margin-left: 2696px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 3106 1186 L 2818.44 966.22" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2804.93 955.89 L 2823.6 959.46 L 2813.27 972.97 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1071px; margin-left: 2955px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 2916 1212 L 2916 1186 L 3296 1186 L 3296 1212" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2916 1212 L 2916 1746 L 3296 1746 L 3296 1212" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2916 1212 L 3296 1212" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="3105.5" y="1203.5">UdpSocket</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2920-1217-372-104-0)" font-size="12px"><text x="2921.5" y="1229.5">- send_list_:BufferList</text><text x="2921.5" y="1243.5">- remote_address_:UdpAddress</text><text x="2921.5" y="1257.5">- local_address_:UdpAddress</text><text x="2921.5" y="1271.5">- type_:UdpType = UdpType::UNKNOWN</text><text x="2921.5" y="1285.5">- kcp_:ikcpcb* = nullptr</text><text x="2921.5" y="1299.5">- p_sock_pool_:UdpSocketPool* = nullptr</text></g><path d="M 2916 1320 L 3296 1320" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2920-1329-372-422-0)" font-size="12px"><text x="2921.5" y="1341.5">+ Reset():void override</text><text x="2921.5" y="1355.5">+ UpdateEvent(SockEventType, time_t):void override</text><text x="2921.5" y="1369.5">+ InitNewAccepter(const std::string&amp;, uint16_t, int32_t, int32_t):bool</text><text x="2921.5" y="1383.5">+ InitNewConnecter(const std::string&amp;, uint16_t, int32_t, int32_t):bool</text><text x="2921.5" y="1397.5">+ Send(const char*, std::size_t):void</text><text x="2921.5" y="1411.5">+ KcpSendTo(const char*, std::size_t):void</text><text x="2921.5" y="1425.5">+ GetType():UdpType</text><text x="2921.5" y="1439.5">+ SetSocketMgr(UdpSocketPool*):void</text><text x="2921.5" y="1453.5">+ Close(ENetErrCode, int32_t):void</text><text x="2921.5" y="1467.5">+ SetRemoteAddress(const UdpAddress&amp;&amp;):void</text><text x="2921.5" y="1481.5">+ GetRemoteAddress():UdpAddress&amp;</text><text x="2921.5" y="1495.5">+ GetRemoteAddressID():uint64_t</text><text x="2921.5" y="1509.5">+ GetLocalAddress():UdpAddress&amp;</text><text x="2921.5" y="1523.5">+ GetLocalAddressID():uint64_t</text><text x="2921.5" y="1537.5">+ OpenKcpMode():void</text><text x="2921.5" y="1551.5">+ GetKcp():ikcpcb*</text><text x="2921.5" y="1565.5">+ SetType(UdpType):void</text><text x="2921.5" y="1579.5">+ KcpUpdate(std::time_t):void</text><text x="2921.5" y="1593.5">+ KcpRecv(const char*, std::size_t, const UdpAddress&amp;&amp;):void</text><text x="2921.5" y="1607.5">- Bind(const std::string&amp;, uint16_t):bool</text><text x="2921.5" y="1621.5">- Bind():bool</text><text x="2921.5" y="1635.5">- UpdateError():void</text><text x="2921.5" y="1649.5">- UpdateRecv():void</text><text x="2921.5" y="1663.5">- UpdateSend():void</text><text x="2921.5" y="1677.5">- UpdateAccept(const SocketAddress&amp;):UdpSocket*</text><text x="2921.5" y="1691.5">- InitAccpetSocket(UdpSocket*, const SocketAddress&amp;):void</text><text x="2921.5" y="1705.5">- SocketRecv(int32_t, char*, size_t&amp;, SocketAddress&amp;):bool</text><text x="2921.5" y="1719.5">- SocketSend(int32_t, const char*, size_t&amp;):bool</text><text x="2921.5" y="1733.5">- Output(const char*, int32_t, ikcpcb*, void*):int32_t staticÂ </text></g><path d="M 2666 462 L 2666 436 L 2956 436 L 2956 462" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2666 462 L 2666 956 L 2956 956 L 2956 462" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2666 462 L 2956 462" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2810.5" y="453.5">BaseSocket</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2670-467-282-94-0)" font-size="12px"><text x="2671.5" y="479.5">- conn_id_:uint32_t = INVALID_CONN_ID</text><text x="2671.5" y="493.5">- socket_id_:SOCKET = 0</text><text x="2671.5" y="507.5">- socket_id_:int32_t = -1</text><text x="2671.5" y="521.5">- is_ctrl_add_:bool = false</text><text x="2671.5" y="535.5">- event_type_:int32_t = SOCKET_EVENT_INVALID</text><text x="2671.5" y="549.5">- p_network_:INetwork*Â  = nullptr</text></g><path d="M 2666 560 L 2956 560" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2670-569-282-392-0)" font-size="12px"><text x="2671.5" y="581.5">+ Reset():void virtualÂ Â </text><text x="2671.5" y="595.5">+ SetNetwork(INetwork*):voidÂ </text><text x="2671.5" y="609.5">+ UpdateEvent(SockEventType, time_t):void virtual = 0</text><text x="2671.5" y="623.5">+ InitNewAccepter(const std::string&amp;, uint16_t, int32_t, int32_t):bool virtual = 0</text><text x="2671.5" y="637.5">+ InitNewConnecter(const std::string&amp;, uint16_t, int32_t, int32_t):bool virtual = 0;</text><text x="2671.5" y="651.5">+ Send(const char* buffer, std::size_t length):void virtual = 0;</text><text x="2671.5" y="665.5">+ GetSocketState():SocketState virtual</text><text x="2671.5" y="679.5">+ GetEventType() const:int32_t</text><text x="2671.5" y="693.5">+ SetSockEventType(int32_t):void</text><text x="2671.5" y="707.5">+ OnErrored(ENetErrCode, int32_t):void</text><text x="2671.5" y="721.5">+ GetSocketID():SOCKET</text><text x="2671.5" y="735.5">+ SetSocketID(SOCKET):void</text><text x="2671.5" y="749.5">+ GetPerSocket():PerSockContext* virtual</text><text x="2671.5" y="763.5">+ ResetRecvPerSocket():void virtual</text><text x="2671.5" y="777.5">+ ResetSendPerSocket():void virtualÂ Â </text><text x="2671.5" y="791.5">+ AssociateSocketToIocp():bool virtual</text><text x="2671.5" y="805.5">+ GetSocketID():int32_t</text><text x="2671.5" y="819.5">+ SetSocketID(int32_t):void</text><text x="2671.5" y="833.5">+ IsCtrlAdd():bool</text><text x="2671.5" y="847.5">+ SetCtrlAdd(bool value):void</text><text x="2671.5" y="861.5">+ GetSocketID():int32_t</text><text x="2671.5" y="875.5">+ SetSocketID(int32_t):void</text><text x="2671.5" y="889.5">+ GetConnID():uint32_t</text><text x="2671.5" y="903.5">+ SetConnID(uint32_t):void</text><text x="2671.5" y="917.5">+ Close(ENetErrCode, int32_t):void virtualÂ Â </text><text x="2671.5" y="931.5">+ IsSocketValid():bool virtual</text><text x="2671.5" y="945.5"># GetSocketError():int32_t</text></g><path d="M 1946 1346 L 2384.58 1299.25" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2373.45 1306.97 L 2385.69 1299.13 L 2372.07 1294.05" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1322px; margin-left: 2167px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 1836 1491 L 1836 1465 L 2236 1465 L 2236 1491" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1836 1491 L 1836 1535 L 2236 1535 L 2236 1491" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1836 1491 L 2236 1491" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2035.5" y="1482.5">TcpKqueueNetwork</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1840-1496-392-44-0)" font-size="12px"><text x="1841.5" y="1508.5">+ Init(NetworkChannel*, NetworkType):void override</text><text x="1841.5" y="1522.5">+ CloseListenInMultiplexing(int32_t socket_id):voidÂ override</text></g><path d="M 2236 1513 L 2384.71 1302.25" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2383.17 1315.7 L 2385.36 1301.34 L 2372.55 1308.21" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1407px; margin-left: 2311px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 1906 1790 L 2913.81 1575.84" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2903.54 1584.67 L 2914.91 1575.61 L 2900.84 1571.95" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1683px; margin-left: 2411px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 2386 1092 L 2386 1066 L 2786 1066 L 2786 1092" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2386 1092 L 2386 1506 L 2786 1506 L 2786 1092" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2386 1092 L 2786 1092" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2585.5" y="1083.5">TcpSocket</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2390-1097-392-124-0)" font-size="12px"><text x="2391.5" y="1109.5">- p_sock_pool_:TCPSocketPool* = nullptr</text><text x="2391.5" y="1123.5">- send_buff_len_:int32_t = 0</text><text x="2391.5" y="1137.5">- recv_buff_len_:int32_t = 0</text><text x="2391.5" y="1151.5">- send_ring_buffer_:RingBuffer&lt;char, DEFAULT_RING_BUFF_SIZE&gt;</text><text x="2391.5" y="1165.5">- recv_ring_buffer_:RingBuffer&lt;char, DEFAULT_RING_BUFF_SIZE&gt;</text><text x="2391.5" y="1179.5">- last_recv_ts_:time_t = 0</text><text x="2391.5" y="1193.5">- per_socket_:PerSockContextÂ  Â </text><text x="2391.5" y="1207.5">- socket_state_:SocketState = SocketState::SOCK_STATE_INVALIED</text></g><path d="M 2386 1220 L 2786 1220" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2390-1229-392-282-0)" font-size="12px"><text x="2391.5" y="1241.5">+ Init(int32_t, int32_t):bool</text><text x="2391.5" y="1255.5">+ UnInit():void</text><text x="2391.5" y="1269.5">+ Reset():void override</text><text x="2391.5" y="1283.5">+ SetSocketMgr(TCPSocketPool*):void</text><text x="2391.5" y="1297.5">+ GetPerSocket():PerSockContext*</text><text x="2391.5" y="1311.5">+ IsSocketValid():bool virtual</text><text x="2391.5" y="1325.5">+ GetRemoteAddress(SOCKET&amp;&amp;, char*, int32_t):sockaddr_in*</text><text x="2391.5" y="1339.5">+ ResetPerSocket():void inline</text><text x="2391.5" y="1353.5">+ ResetRecvPerSocket():void override</text><text x="2391.5" y="1367.5">+ ResetSendPerSocket():void override</text><text x="2391.5" y="1381.5">+ AssociateSocketToIocp():bool</text><text x="2391.5" y="1395.5">+ ReAddSocketToIocp(SockEventType):bool</text><text x="2391.5" y="1409.5">+ SetSocketState(SocketState):void</text><text x="2391.5" y="1423.5">+ GetSocketState():SocketState</text><text x="2391.5" y="1437.5">+ UpdateEvent(SockEventType , time_t ):void override</text><text x="2391.5" y="1451.5">+ InitNewAccepter(const std::string&amp;, const uint16_t, int32_t, int32_t):bool override</text><text x="2391.5" y="1465.5">+ InitNewConnecter(const std::string &amp;, uint16_t, int32_t, int32_t):bool override</text><text x="2391.5" y="1479.5">+ Send(const char*, size_t):void override</text><text x="2391.5" y="1493.5">+ Close(ENetErrCode, int32_t):void override</text></g><path d="M 2096 1414 L 2383.92 1300.82" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2375.24 1311.21 L 2384.96 1300.41 L 2370.48 1299.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1357px; margin-left: 2241px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 1336 216 L 1232.03 163.78" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1216.84 156.15 L 1235.85 156.19 L 1228.22 171.38 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 186px; margin-left: 1276px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Extends</div></div></div></foreignObject></g><path d="M 936 16 L 1086 16 L 1086 111 L 1076 126 L 936 126 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1086 16 L 1466 16 L 1466 506 L 936 506 L 936 126" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 71px; margin-left: 937px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; "><font style="font-size: 48px;">Event</font></div></div></div></foreignObject></g><path d="M 1136 72 L 1136 46 L 1296 46 L 1296 72" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1136 72 L 1136 156 L 1296 156 L 1296 72" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1136 72 L 1296 72" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1215.5" y="63.5">Event</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1140-77-152-26-0)" font-size="12px"><text x="1141.5" y="89.5">- id_:EventIDÂ  = EID_NONE</text></g><path d="M 1136 102 L 1296 102" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1140-111-152-50-0)" font-size="12px"><text x="1141.5" y="123.5">+Â Event(EventID):Â </text><text x="1141.5" y="137.5">+ ~Event(): virtual</text><text x="1141.5" y="151.5">+Â GetID():EventID</text></g><path d="M 1226 242 L 1226 216 L 1446 216 L 1446 242" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1226 242 L 1226 486 L 1446 486 L 1446 242" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1226 242 L 1446 242" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1335.5" y="233.5">NetEventWorker</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1230-247-212-26-0)" font-size="12px"><text x="1231.5" y="259.5">-Â net_req_:union NetReq</text></g><path d="M 1226 272 L 1446 272" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1230-281-212-210-0)" font-size="12px"><text x="1231.5" y="293.5">+ NetEventWorker(EventID):</text><text x="1231.5" y="307.5">+ ~NetEventWorker(): virtualÂ </text><text x="1231.5" y="321.5">+ SetIP(const std::string&amp;):void</text><text x="1231.5" y="335.5">+ GetIP() const:std::string</text><text x="1231.5" y="349.5">+ SetAddressPort(const uint16_t):void</text><text x="1231.5" y="363.5">+ GetPort() const:uint16_t</text><text x="1231.5" y="377.5">+ SetBuffSize(int32_t, int32_t):void</text><text x="1231.5" y="391.5">+ GetSendBuffSize():int32_t</text><text x="1231.5" y="405.5">+ GetRecvBuffSize():int32_t</text><text x="1231.5" y="419.5">+ SetConnectID(const uint64_t):void</text><text x="1231.5" y="433.5">+ GetConnectID() const:uint64_t</text><text x="1231.5" y="447.5">+ SetData(const char*, uint32_t):void</text><text x="1231.5" y="461.5">+ GetData() const:char*</text><text x="1231.5" y="475.5">+ GetDataSize() const:uint32_t</text></g><path d="M 976 232 L 976 206 L 1136 206 L 1136 232" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 976 232 L 976 306 L 1136 306 L 1136 232" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 976 232 L 1136 232" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1055.5" y="223.5">NetEventMain</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-980-237-152-26-0)" font-size="12px"><text x="981.5" y="249.5">+Â net_evt_:Â NetEvt</text></g><path d="M 976 262 L 1136 262" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-980-271-152-40-0)" font-size="12px"><text x="981.5" y="283.5">NetEventMain(EventID):</text><text x="981.5" y="297.5">~NetEventMain():virtual</text></g><rect x="846" y="1011" width="210" height="50" fill="#ffffff" stroke="#000000" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1036px; margin-left: 951px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: nowrap; ">Â«interfaceÂ»<br /><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px;"><span style="color: #4ec9b0;">IOMultiplexingInterface</span></div></div></div></div></foreignObject></g><path d="M 1569.65 1035.92 L 1306 1035.9 Q 1296 1035.9 1286 1035.9 L 1058.24 1036" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1584.65 1035.92 L 1577.15 1040.33 L 1569.65 1035.92 L 1577.15 1031.51 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1070.12 1029.5 L 1057.12 1036 L 1070.12 1042.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1036px; margin-left: 1588px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">1</div></div></div></foreignObject></g><path d="M 991 1326 L 953.11 1074.96" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 951.17 1062.11 L 959.53 1073.99 L 946.68 1075.93 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 651 1516 L 943.23 1072.79" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 950.38 1061.93 L 948.66 1076.36 L 937.8 1069.21 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1666 1346 L 1407.75 1141.45" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1421.1 1143.73 L 1406.88 1140.75 L 1413.03 1153.92" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1243px; margin-left: 1536px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 1221 1126 L 964.73 1064.3" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 952.09 1061.26 L 966.25 1057.98 L 963.2 1070.62 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1636 1636 L 1406.94 1142.28" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1417.84 1150.32 L 1406.47 1141.26 L 1406.05 1155.79" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1388px; margin-left: 1521px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 1816 1418.68 L 1177.85 1334.21" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1190.48 1329.33 L 1176.74 1334.07 L 1188.77 1342.22" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1376px; margin-left: 1496px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 1836 1483.68 L 838.6 1528.99" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 850.18 1521.96 L 837.49 1529.04 L 850.77 1534.94" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1506px; margin-left: 1337px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 466 1542 L 466 1516 L 836 1516 L 836 1542" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 466 1542 L 466 1686 L 836 1686 L 836 1542" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 466 1542 L 836 1542" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="650.5" y="1533.5">KqueueCtrl</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-470-1547-362-54-0)" font-size="12px"><text x="471.5" y="1559.5">fd_num_:uint32_t = 0</text><text x="471.5" y="1573.5">kqueue_fd_:int = 0</text><text x="471.5" y="1587.5">events_:struct kevent *</text></g><path d="M 466 1600 L 836 1600" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-470-1609-362-82-0)" font-size="12px"><text x="471.5" y="1621.5">+ CreateIOMultiplexing():bool override</text><text x="471.5" y="1635.5">+ DestroyIOMultiplexing():void override</text><text x="471.5" y="1649.5">+ OperEvent(BaseSocket &amp;, EventOperType, int32_t):bool override</text><text x="471.5" y="1663.5">+ Kevent(int):int32_tÂ </text><text x="471.5" y="1677.5">+ RunOnce():bool override</text></g><path d="M 806 1352 L 806 1326 L 1176 1326 L 1176 1352" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 806 1352 L 806 1506 L 1176 1506 L 1176 1352" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 806 1352 L 1176 1352" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="990.5" y="1343.5">IocpCtrl</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-810-1357-362-34-0)" font-size="12px"><text x="811.5" y="1369.5">-Â iocp_fd_:HANDLE</text></g><path d="M 806 1390 L 1176 1390" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-810-1399-362-112-0)" font-size="12px"><text x="811.5" y="1411.5">+ CreateIOMultiplexing():bool override</text><text x="811.5" y="1425.5">+ DestroyIOMultiplexing():void override</text><text x="811.5" y="1439.5">+ OperEvent(BaseSocket &amp;, EventOperType, int32_t):bool override</text><text x="811.5" y="1453.5">+ AssociateSocketToIocp(BaseSocket&amp; ):bool</text><text x="811.5" y="1467.5">+ OnRecv(BaseSocket&amp;):bool</text><text x="811.5" y="1481.5">+ OnSend(BaseSocket&amp;):bool+ RunOnce():bool override</text><text x="811.5" y="1495.5">+ RunOnce():bool override</text></g><path d="M 1036 1152 L 1036 1126 L 1406 1126 L 1406 1152" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1036 1152 L 1036 1316 L 1406 1316 L 1406 1152" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1036 1152 L 1406 1152" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1220.5" y="1143.5">EpollCtrl</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1040-1157-362-54-0)" font-size="12px"><text x="1041.5" y="1169.5">- max_events_:uint32_t = 0</text><text x="1041.5" y="1183.5">- epoll_fd_:int</text><text x="1041.5" y="1197.5">- events_:epoll_event*</text></g><path d="M 1036 1210 L 1406 1210" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1040-1219-362-102-0)" font-size="12px"><text x="1041.5" y="1231.5">+ CreateIOMultiplexing():bool override</text><text x="1041.5" y="1245.5">+ DestroyIOMultiplexing():void override</text><text x="1041.5" y="1259.5">+ DelEvent(int):bool</text><text x="1041.5" y="1273.5">+ OperEvent(BaseSocket &amp;, EventOperType, int32_t):bool override</text><text x="1041.5" y="1287.5">+ EpollWait(int msec):int</text><text x="1041.5" y="1301.5">+ RunOnce():bool override</text></g><path d="M 16 536 L 16 510 L 426 510 L 426 536" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 16 536 L 16 870 L 426 870 L 426 536" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 16 536 L 426 536" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="220.5" y="527.5">NetworkChannel</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-20-541-402-64-0)" font-size="12px"><text x="21.5" y="553.5">-Â event2main_ : Event2Main</text><text x="21.5" y="567.5">-Â stop_ :Â std::atomic_bool</text><text x="21.5" y="581.5">-Â worker_ :Â std::unique_ptr&lt;std::thread&gt;</text><text x="21.5" y="595.5">-Â networks_ :Â NetworkArray</text></g><path d="M 16 604 L 426 604" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-20-613-402-262-0)" font-size="12px"><text x="21.5" y="625.5">+Â Start(): boolÂ virtual</text><text x="21.5" y="639.5">+Â Update():voidÂ virtual</text><text x="21.5" y="653.5">+ StopWait() :Â void virtualÂ Â </text><text x="21.5" y="667.5">+Â Close(NetworkType,Â uint64_t):void</text><text x="21.5" y="681.5">+Â Send(NetworkType, uint64_t, const char*, uint32_t):void</text><text x="21.5" y="695.5">+Â NotifyMain(NetEventMain*):bool</text><text x="21.5" y="709.5"># OnAccepted(uint64_t):void virtual</text><text x="21.5" y="723.5"># OnConnected(uint64_t):void virtual</text><text x="21.5" y="737.5"># OnConnectedFailed(ENetErrCode, int32_t):void virtual</text><text x="21.5" y="751.5"># OnErrored(uint64_t, ENetErrCode, int32_t):void virtual</text><text x="21.5" y="765.5"># OnClose(uint64_t, ENetErrCode, int32_t):void virtual</text><text x="21.5" y="779.5"># OnReceived(uint64_t, const char*, size_t):void virtual</text><text x="21.5" y="793.5">+ Accept(const std::string&amp;, uint16_t, NetworkType, int32_t, int32_t):void</text><text x="21.5" y="807.5">+ Connect(const std::string&amp;, uint16_t, NetworkType, int32_t, int32_t):void</text><text x="21.5" y="821.5">+ NotifyWorker(NetEventWorker*, NetworkType):void</text><text x="21.5" y="835.5">- DispatchMainEvent_():voidÂ </text><text x="21.5" y="849.5">- GetNetwork_(NetworkType): INetwork*</text></g><path d="M 951 1011 L 2663.85 509.63" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2654.28 519.2 L 2664.93 509.31 L 2650.62 506.73" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 760px; margin-left: 1808px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 960 1552 L 960 1526 L 1330 1526 L 1330 1552" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 960 1552 L 960 1706 L 1330 1706 L 1330 1552" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 960 1552 L 1330 1552" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1144.5" y="1543.5">IOUringCtrl</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-964-1557-362-64-0)" font-size="12px"><text x="965.5" y="1569.5">ring_:structÂ io_uring= 0</text><text x="965.5" y="1583.5">max_events_:uint32_tÂ = 0</text><text x="965.5" y="1597.5">bufs_:char[]</text><text x="965.5" y="1611.5">group_id_:int32_t</text></g><path d="M 960 1620 L 1330 1620" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-964-1629-362-82-0)" font-size="12px"><text x="965.5" y="1641.5">+ CreateIOMultiplexing():bool override</text><text x="965.5" y="1655.5">+ DestroyIOMultiplexing():void override</text><text x="965.5" y="1669.5">+ OperEvent(BaseSocket &amp;, EventOperType, int32_t):bool override</text><text x="965.5" y="1683.5">+Â URingWait(int):int32_tÂ </text><text x="965.5" y="1697.5">+ RunOnce():bool override</text></g><path d="M 1546 1662 L 1546 1636 L 1906 1636 L 1906 1662" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1546 1662 L 1546 1876 L 1906 1876 L 1906 1662" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1546 1662 L 1906 1662" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1725.5" y="1653.5">UdpEpollNetwork</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1550-1667-352-34-0)" font-size="12px"><text x="1551.5" y="1679.5">- address_to_connect_:Â std::unordered_map&lt;uint64_t, uint32_t&gt;</text><text x="1551.5" y="1693.5">-Â is_kcp_open_:bool</text></g><path d="M 1546 1700 L 1906 1700" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1550-1709-352-172-0)" font-size="12px"><text x="1551.5" y="1721.5">+ Init(NetworkChannel*, NetworkType):void override</text><text x="1551.5" y="1735.5">+ Update():void override</text><text x="1551.5" y="1749.5">+ GetSocketByUdpAddress(const UdpAddress&amp;):UdpSocket*</text><text x="1551.5" y="1763.5">+ AddUdpAddress(const UdpAddress&amp;, uint32_t):void</text><text x="1551.5" y="1777.5">+ DeleteUdpAddress(const UdpAddress&amp;):void</text><text x="1551.5" y="1791.5">+ OpenKcpMode():void</text><text x="1551.5" y="1805.5">+ IsKcpModeOpen():bool</text><text x="1551.5" y="1819.5"># OnNewAccepter(const std::string&amp;, const uint16_t, int32_t, int32_t):uint64_t override</text><text x="1551.5" y="1833.5"># OnNewConnecter(const std::string&amp;, const uint16_t, int32_t, int32_t):uint64_t override</text><text x="1551.5" y="1847.5"># OnClose(uint64_t):void override</text><text x="1551.5" y="1861.5"># OnSend(uint64_t, const char*, std::size_t):void override</text></g><path d="M 1856 1581 L 1331.49 1539.5" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1343.85 1533.95 L 1330.37 1539.41 L 1342.82 1546.91" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1560px; margin-left: 1593px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g><path d="M 1856 1582 L 1856 1556 L 2256 1556 L 2256 1582" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1856 1582 L 1856 1606 L 2256 1606 L 2256 1582" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1856 1582 L 2256 1582" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2055.5" y="1573.5">TcpIOUringNetwork</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1860-1587-392-24-0)" font-size="12px"><text x="1861.5" y="1599.5">+ Init(NetworkChannel*, NetworkType):void override</text></g><path d="M 2256 1568.5 L 2384.62 1303.56" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2385.28 1317.09 L 2385.11 1302.56 L 2373.59 1311.41" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1435px; margin-left: 2321px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">Use</div></div></div></foreignObject></g></g></svg>